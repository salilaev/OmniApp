kotlin version: 2.1.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/salilaev/Stopwatch/presentation/weather/src/main/java/com/salilaev/weather/WeatherScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:Content visibility:protected modality:OPEN <> ($this:com.salilaev.weather.WeatherScreen) returnType:kotlin.Unit
  annotations:
    Composable
  overridden:
    protected abstract fun Content (): kotlin.Unit declared in com.salilaev.base.ComposeFragment
  $this: VALUE_PARAMETER name:<this> type:com.salilaev.weather.WeatherScreen
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:state$delegate type:androidx.compose.runtime.State<com.salilaev.weather.WeatherState> [val]
      TYPE_OP type=androidx.compose.runtime.State<com.salilaev.weather.WeatherState> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<com.salilaev.weather.WeatherState>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: com.salilaev.weather.WeatherState
          $receiver: CALL 'public final fun <get-currentWeatherState> (): kotlinx.coroutines.flow.StateFlow<com.salilaev.weather.WeatherState> declared in com.salilaev.weather.WeatherViewModel' type=kotlinx.coroutines.flow.StateFlow<com.salilaev.weather.WeatherState> origin=GET_PROPERTY
            $this: CALL 'private final fun <get-viewModel> (): com.salilaev.weather.WeatherViewModel declared in com.salilaev.weather.WeatherScreen' type=com.salilaev.weather.WeatherViewModel origin=GET_PROPERTY
              $this: GET_VAR '<this>: com.salilaev.weather.WeatherScreen declared in com.salilaev.weather.WeatherScreen.Content' type=com.salilaev.weather.WeatherScreen origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    VAR name:gradientBrush type:androidx.compose.ui.graphics.Brush [val]
      WHEN type=androidx.compose.ui.graphics.Brush origin=IF
        BRANCH
          if: CALL 'public final fun OROR (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun <get-isLoading> (): kotlin.Boolean declared in com.salilaev.weather.WeatherState' type=kotlin.Boolean origin=GET_PROPERTY
              $this: CALL 'private final fun Content$lambda$0 ($state$delegate: androidx.compose.runtime.State<com.salilaev.weather.WeatherState>): com.salilaev.weather.WeatherState declared in com.salilaev.weather.WeatherScreen' type=com.salilaev.weather.WeatherState origin=GET_LOCAL_PROPERTY
                $state$delegate: GET_VAR 'val state$delegate: androidx.compose.runtime.State<com.salilaev.weather.WeatherState> [val] declared in com.salilaev.weather.WeatherScreen.Content' type=androidx.compose.runtime.State<com.salilaev.weather.WeatherState> origin=null
            arg1: CALL 'public final fun <get-isNight> (): kotlin.Boolean declared in com.salilaev.weather.WeatherState' type=kotlin.Boolean origin=GET_PROPERTY
              $this: CALL 'private final fun Content$lambda$0 ($state$delegate: androidx.compose.runtime.State<com.salilaev.weather.WeatherState>): com.salilaev.weather.WeatherState declared in com.salilaev.weather.WeatherScreen' type=com.salilaev.weather.WeatherState origin=GET_LOCAL_PROPERTY
                $state$delegate: GET_VAR 'val state$delegate: androidx.compose.runtime.State<com.salilaev.weather.WeatherState> [val] declared in com.salilaev.weather.WeatherScreen.Content' type=androidx.compose.runtime.State<com.salilaev.weather.WeatherState> origin=null
          then: BLOCK type=androidx.compose.ui.graphics.Brush origin=null
            CALL 'public final fun verticalGradient-8A-3gB4$default ($this: androidx.compose.ui.graphics.Brush.Companion, colors: kotlin.collections.List<androidx.compose.ui.graphics.Color>, startY: kotlin.Float, endY: kotlin.Float, tileMode: androidx.compose.ui.graphics.TileMode, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.graphics.Brush declared in androidx.compose.ui.graphics.Brush.Companion' type=androidx.compose.ui.graphics.Brush origin=DEFAULT_DISPATCH_CALL
              $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Brush.Companion visibility:public [final,static] declared in androidx.compose.ui.graphics.Brush' type=androidx.compose.ui.graphics.Brush.Companion origin=null
              colors: CALL 'public final fun <get-DayTheme> (): kotlin.collections.List<androidx.compose.ui.graphics.Color> declared in com.salilaev.theme.ColorKt' type=kotlin.collections.List<androidx.compose.ui.graphics.Color> origin=GET_PROPERTY
              startY: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              endY: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              tileMode: COMPOSITE type=androidx.compose.ui.graphics.TileMode origin=DEFAULT_VALUE
                CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.TileMode origin=null
                  <T>: kotlin.Int
                  <R>: androidx.compose.ui.graphics.TileMode
                  v: CONST Int type=kotlin.Int value=0
              $mask0: CONST Int type=kotlin.Int value=14
              $handler: CONST Null type=kotlin.Any? value=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: BLOCK type=androidx.compose.ui.graphics.Brush origin=null
            CALL 'public final fun verticalGradient-8A-3gB4$default ($this: androidx.compose.ui.graphics.Brush.Companion, colors: kotlin.collections.List<androidx.compose.ui.graphics.Color>, startY: kotlin.Float, endY: kotlin.Float, tileMode: androidx.compose.ui.graphics.TileMode, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.graphics.Brush declared in androidx.compose.ui.graphics.Brush.Companion' type=androidx.compose.ui.graphics.Brush origin=DEFAULT_DISPATCH_CALL
              $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Brush.Companion visibility:public [final,static] declared in androidx.compose.ui.graphics.Brush' type=androidx.compose.ui.graphics.Brush.Companion origin=null
              colors: CALL 'public final fun <get-NightTheme> (): kotlin.collections.List<androidx.compose.ui.graphics.Color> declared in com.salilaev.theme.ColorKt' type=kotlin.collections.List<androidx.compose.ui.graphics.Color> origin=GET_PROPERTY
              startY: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              endY: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              tileMode: COMPOSITE type=androidx.compose.ui.graphics.TileMode origin=DEFAULT_VALUE
                CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.TileMode origin=null
                  <T>: kotlin.Int
                  <R>: androidx.compose.ui.graphics.TileMode
                  v: CONST Int type=kotlin.Int value=0
              $mask0: CONST Int type=kotlin.Int value=14
              $handler: CONST Null type=kotlin.Any? value=null
    CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun safeContentPadding (): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.WindowInsetsPadding_androidKt' type=androidx.compose.ui.Modifier origin=null
        $receiver: CALL 'public final fun background$default (brush: androidx.compose.ui.graphics.Brush, shape: androidx.compose.ui.graphics.Shape?, alpha: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: CALL 'public final fun fillMaxSize$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
            $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
            fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
              CONST Float type=kotlin.Float value=0.0
            $mask0: CONST Int type=kotlin.Int value=1
            $handler: CONST Null type=kotlin.Any? value=null
          brush: GET_VAR 'val gradientBrush: androidx.compose.ui.graphics.Brush [val] declared in com.salilaev.weather.WeatherScreen.Content' type=androidx.compose.ui.graphics.Brush origin=null
          shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
            CONST Null type=androidx.compose.ui.graphics.Shape? value=null
          alpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=6
          $handler: CONST Null type=kotlin.Any? value=null
      contentAlignment: CALL 'public final fun <get-Center> (): androidx.compose.ui.Alignment declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment origin=GET_PROPERTY
        $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static] declared in androidx.compose.ui.Alignment' type=androidx.compose.ui.Alignment.Companion origin=null
      propagateMinConstraints: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun Content$lambda$1 (this$0: com.salilaev.weather.WeatherScreen, $state$delegate: androidx.compose.runtime.State<com.salilaev.weather.WeatherState>): kotlin.Unit declared in com.salilaev.weather.WeatherScreen' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          this$0: GET_VAR '<this>: com.salilaev.weather.WeatherScreen declared in com.salilaev.weather.WeatherScreen.Content' type=com.salilaev.weather.WeatherScreen origin=null
          $state$delegate: GET_VAR 'val state$delegate: androidx.compose.runtime.State<com.salilaev.weather.WeatherState> [val] declared in com.salilaev.weather.WeatherScreen.Content' type=androidx.compose.runtime.State<com.salilaev.weather.WeatherState> origin=null
      $mask0: CONST Int type=kotlin.Int value=4
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 55 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/foundation/layout/BoxKt;.Box$default(Landroidx/compose/ui/Modifier;Landroidx/compose/ui/Alignment;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 67 more


